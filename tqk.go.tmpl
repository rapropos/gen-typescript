{{define "tqk"}}
// TQK IN
{{- $method := .Method }}
{{- $methodMap := .MethodMap }}
{{- $typeMap := .TypeMap}}

{{- $baseName := trimPrefix $method.Name "Watch" }}
{{- $tsbn := firstLetterToLower $baseName }}

{{- $hasInput := gt (len $method.Inputs) 0}}

export const {{$tsbn}}Verb = "{{$baseName}}";

{{- if $hasInput }}

    {{- if ne $baseName $method.Name }}
export type {{$baseName}}Args = Watch{{$baseName}}Args;
    {{- end }}

export function {{$tsbn}}Tqk(args?: {{$baseName}}Args) {
    return args ? [{{$tsbn}}Verb, args] as const : [{{$tsbn}}Verb] as const;
}
{{- else }}

export const {{$tsbn}}Tqk = [{{$tsbn}}Verb] as const;
{{- end }}
// TQK OUT
{{- end }}