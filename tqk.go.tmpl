{{define "tqk"}}
// TQK IN
{{- $watchMethod := .watchMethod }}
{{- $methodMap := .MethodMap }}
{{- $typeMap := .TypeMap}}

{{- $baseName := trimPrefix $watchMethod.Name "Watch" }}
{{- $tsbn := firstLetterToLower $baseName }}

{{- $hasInput := gt (len $watchMethod.Inputs) 0}}

export const {{$tsbn}}Verb = "{{$baseName}}";

{{- if $hasInput }}

export interface {{$baseName}}Args {
{{-     range $i, $input := $watchMethod.Inputs }}
    {{ template "fieldName" dict "Field" $input }}
    {{- if $input.Optional}}?{{end}}: {{template "type" dict "Type" $input.Type "TypeMap" $typeMap}};
{{- end }}
}

export function {{$tsbn}}Tqk(args?: {{$baseName}}Args) {
    return args ? [{{$tsbn}}Verb, args] as const : [{{$tsbn}}Verb] as const;
}
{{- else }}

export const {{$tsbn}}Tqk = [{{$tsbn}}Verb] as const;
{{- end }}
// TQK OUT
{{- end }}